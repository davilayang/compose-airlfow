# Local Airflow cluster configuration with CeleryExecutor using Redis and PostgreSQL
# reference: https://airflow.apache.org/docs/apache-airflow/2.0.1/start/docker.html
---
version: '3'
x-airflow-common:
  &airflow-common
  build: . # build from Dockerfile
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://user:pass@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__LOGGING_LEVEL: INFO
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    # AIRFLOW__SECRETS__BACKEND: airflow.contrib.secrets.gcp_secrets_manager.CloudSecretsManagerBackend
    # AIRFLOW__SECRETS__BACKEND_KWARGS : '{"gcp_key_path": "/opt/airflow/config/google_creds.json"}'
    # AIRFLOW__EXTRA__GOOGLE_CLOUD_PLATFORM__KEY_PATH: /opt/airflow/config/google_creds.json
    # GOOGLE_APPLICATION_CREDENTIALS: /opt/airflow/config/google_creds.json
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./config:/opt/airflow/config
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  airflow-init: # initialize the backend database
    <<: *airflow-common
    command: db init
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "airflow"]
      interval: 5s
      retries: 3
    restart: always
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always
  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
  airflow-worker:
    <<: *airflow-common
    command: celery worker
    restart: always
  flower:
    <<: *airflow-common
    command: celery flower
    ports:
      - 5555:5555
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
volumes:
  postgres-db-volume:
